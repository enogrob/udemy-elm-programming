var _user$project$MouseClicker$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Position X is: ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(model.x),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' and Y is: ',
							_elm_lang$core$Basics$toString(model.y))))),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'You pressed: ',
								_elm_lang$core$Basics$toString(
									_elm_lang$core$Char$fromCode(model.keyPressed)))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'Random number is: ',
									_elm_lang$core$Basics$toString(model.randomNum))),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$MouseClicker$Model = F4(
	function (a, b, c, d) {
		return {x: a, y: b, keyPressed: c, randomNum: d};
	});
var _user$project$MouseClicker$init = {
	ctor: '_Tuple2',
	_0: A4(_user$project$MouseClicker$Model, 0, 0, 0, 0),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$MouseClicker$OnResult = function (a) {
	return {ctor: 'OnResult', _0: a};
};
var _user$project$MouseClicker$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'MouseMessage':
				var _p1 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{x: _p1.x, y: _p1.y}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'KeyboardMsg':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{keyPressed: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Roll':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$MouseClicker$OnResult,
						A2(_elm_lang$core$Random$int, 1, 100))
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{randomNum: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$MouseClicker$Roll = {ctor: 'Roll'};
var _user$project$MouseClicker$KeyboardMsg = function (a) {
	return {ctor: 'KeyboardMsg', _0: a};
};
var _user$project$MouseClicker$MouseMessage = function (a) {
	return {ctor: 'MouseMessage', _0: a};
};
var _user$project$MouseClicker$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$mouse$Mouse$clicks(_user$project$MouseClicker$MouseMessage),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$presses(_user$project$MouseClicker$KeyboardMsg),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MouseClicker$main = _elm_lang$html$Html$program(
	{init: _user$project$MouseClicker$init, view: _user$project$MouseClicker$view, update: _user$project$MouseClicker$update, subscriptions: _user$project$MouseClicker$subscriptions})();
